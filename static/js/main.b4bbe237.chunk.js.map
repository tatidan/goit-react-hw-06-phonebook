{"version":3,"sources":["redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","components/contactsForm/ContactsForm.js","components/contacts/ContactsList.js","components/searchForm/SearchForm.js","components/section/Section.js","App.js","redux/contacts/contacts-reducer.js","redux/contacts/store.js","index.js"],"names":["types","NAME_CHECK","ADD_CONTACT","REMOVE_CONTACT","SEARCH_FILTER","FILTER_RENDER","addNewContact","name","number","id","type","payload","onNameCheck","newName","ContactsForm","state","nameInputId","shortid","generate","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","length","alert","reset","className","onSubmit","this","onChange","placeholder","pattern","title","required","Component","connect","dispatch","onFilterRender","allContacts","filter","normalizedFilter","toLowerCase","includes","contacts","removeContact","map","onClick","onSearchHandler","target","Section","children","App","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4bbe237.chunk.js","sourcesContent":["const types = {\r\n  NAME_CHECK: \"contacts/nameCheck\",\r\n  ADD_CONTACT: \"contacts/addContact\",\r\n  REMOVE_CONTACT: \"contacts/removeContact\",\r\n  SEARCH_FILTER: \"contacts/searchFilter\",\r\n  FILTER_RENDER: \"contacts/filterRender\",\r\n};\r\n\r\nexport default types;\r\n","import types from \"../contacts/contacts-types\";\r\n\r\nexport const addNewContact = ({ name, number, id }) => ({\r\n  type: types.ADD_CONTACT,\r\n  payload: {\r\n    name,\r\n    number,\r\n    id,\r\n  },\r\n});\r\n\r\nexport const removeContact = (id) => ({\r\n  types: types.REMOVE_CONTACT,\r\n  payload: id,\r\n});\r\n\r\nexport const onNameCheck = (newName) => ({\r\n  types: types.NAME_CHECK,\r\n  payload: newName,\r\n});\r\n\r\nexport const onSearchFilter = (value) => ({\r\n  types: types.SEARCH_FILTER,\r\n  payload: value,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { connect } from \"react-redux\";\r\nimport { onNameCheck } from \"../../redux/contacts/contacts-actions\";\r\nimport { addNewContact } from \"../../redux/contacts/contacts-actions\";\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      id: shortid.generate(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onNameCheck(this.state.name).length >= 1\r\n      ? alert(`Contact with the name ${this.state.name} already exists.`)\r\n      : addNewContact(this.state);\r\n    // this.props.onNameCheck(this.state.name).length >= 1\r\n    //   ? alert(`Contact with the name ${this.state.name} already exists.`)\r\n    //   : this.props.addNewContact(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"formLabel\">\r\n          Name\r\n          <input\r\n            className=\"nameInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            id={this.id}\r\n            onChange={this.handleChange}\r\n            placeholder=\"enter name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className=\"formLabel\">\r\n          Phone number\r\n          <input\r\n            className=\"phoneInput\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"enter phone number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"submitBtn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (newName) => dispatch(addNewContact(newName), onNameCheck(newName)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst ContactsList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className=\"contactsList\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"contactsListItem\" id={id} key={id}>\r\n          <b className=\"contactName\">{name}:</b>\r\n          {number}\r\n          <button\r\n            className=\"deleteBtn\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              removeContact(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst onFilterRender = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, contacts } = state.contacts;\r\n//   const filteredContacts = onFilterRender(contacts, filter);\r\n\r\n//   return { contacts: filteredContacts };\r\n// };\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n  contacts: onFilterRender(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeContact: (id) => dispatch(removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onSearchFilter } from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst SearchForm = ({ onSearchHandler, filter }) => {\r\n  return (\r\n    <label className=\"searchFormLabel\">\r\n      Find contacts by name\r\n      <input\r\n        className=\"searchField\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"enter name\"\r\n        value={filter}\r\n        onChange={onSearchHandler}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSearchHandler: (e) => dispatch(onSearchFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n","import React from \"react\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport ContactsForm from \"./components/contactsForm/ContactsForm\";\nimport ContactsList from \"./components/contacts/ContactsList\";\nimport SearchForm from \"./components/searchForm/SearchForm\";\nimport Section from \"./components/section/Section\";\nimport \"./index.css\";\n\nclass App extends Component {\n  // state = {\n  // contacts: [\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ],\n  // filter: \"\",\n  // };\n\n  // onNameCheck = (newName) => {\n  //   return this.state.contacts.filter(\n  //     (contact) => contact.name.toLowerCase() === newName.toLowerCase()\n  //   );\n  // };\n\n  // addNewContact = (contact) => {\n  //   this.setState((prev) => ({\n  //     contacts: [...prev.contacts, contact],\n  //   }));\n  // };\n\n  // removeContact = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n  // onSearchFilter = (e) => {\n  //   this.setState({ filter: e.currentTarget.value });\n  // };\n\n  // componentDidMount() {\n  //   // const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactsForm\n          // onNameCheck={this.onNameCheck}\n          // addNewContact={this.addNewContact}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          <SearchForm\n          // onSearchHandler={this.onSearchFilter}\n          // filter={this.state.filter}\n          />\n          <ContactsList\n          // contacts={filteredContacts}\n          // onFilterRender={this.onFilterRender}\n          // removeContact={this.removeContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport types from \"./contacts-types\";\r\n\r\nconst contacts = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_CONTACT:\r\n      return [...state, payload];\r\n    case types.REMOVE_CONTACT:\r\n      return state.filter(({ id }) => id !== payload);\r\n    case types.NAME_CHECK:\r\n      return state.filter(\r\n        ({ name }) => name.toLowerCase() === payload.toLowerCase()\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case types.SEARCH_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ contacts, filter });\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import counterReducer from \"./counter/counter-reducer\";\r\nimport contactsReducer from \"../contacts/contacts-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  // counter: counterReducer,\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/contacts/store\";\n// import { myAction } from \"./redux/actions\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\n// console.log(store.getState());\n// console.log(store.dispatch(myAction));\n// // store.dispatch(myAction);\n// store.dispatch(myAction(10));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}